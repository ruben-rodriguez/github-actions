name: Build and test apps
on: [push]
jobs:
    check-app:
        runs-on: ubuntu-latest
        outputs:
          dir: ${{ steps.dir.outputs.dir }}
          dir_exists: ${{ steps.dir_exists.outputs.dir_exists }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Populate branch naming vars
              id: vars
              run: |
                echo "BRANCH_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
                export NAME=${GITHUB_REF#refs/*/}
                echo "APP_NAME=${NAME%%/*}" >> $GITHUB_ENV
            - name: Check if dir exists
              id: dir_exists
              run: |
                file ./go-apps/go/"${{ env.APP_NAME }}" | grep "No such" | wc -l
                echo "::set-output name=dir_exists::$(file ./go-apps/go/"${{ env.APP_NAME }}" | grep "No such" | wc -l)"
            - name: Set working dir
              if: ${{ steps.dir_exists.outputs.dir_exists == 0}} 
              id: dir
              run: echo "::set-output name=dir::./go-apps/go/${{ env.APP_NAME }}"
              
    go-test:
      if: ${{ needs.check-app.outputs.dir_exists  == '0' }} 
      runs-on: ubuntu-latest
      needs: [check-app]
      outputs:
        message_id: ${{ steps.slack.outputs.message_id }}
      defaults:
        run:
          working-directory: ${{ needs.check-app.outputs.dir }}
      steps:
        - name: Notify slack start
          if: success()
          id: slack # IMPORTANT: reference this step ID value in future Slack steps
          env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          uses: voxmedia/github-action-slack-notify-build@v1
          with:
            channel: builds
            status: STARTING
            color: warning
        - uses: actions/checkout@v2
        - uses: actions/setup-go@v2
          with:
            go-version: "1.13.1"
        - name: Test go version
          run: go version
        - name: Get dependencies
          run: go get
        - name: Test DryRun
          run: go test -v -ginkgo.noColor -ginkgo.dryRun
        - name: Test
          run: go test -v -ginkgo.noColor
        - name: Notify slack success 
          if: ${{ success() }}
          env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          uses: voxmedia/github-action-slack-notify-build@v1
          with:
            message_id: ${{ steps.slack.outputs.message_id }}
            channel: builds
            status: SUCCESS
            color: good
        - name: Notify slack fail
          if: ${{ failure() }}
          env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          uses: voxmedia/github-action-slack-notify-build@v1
          with:
            message_id: ${{ steps.slack.outputs.message_id  }}
            channel: builds
            status: FAILED
            color: danger
